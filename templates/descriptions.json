{
  "monobit": {
    "title": "Monobit (Frequency) Test",
    "short": "Checks the 0/1 balance of the bits.",
    "long": "The test evaluates the proportional balance between the number of 0s and 1s in the bit string. Excessive deviation indicates non-randomness.",
    "remediation": "Low p-values indicate repeating bit patterns or a constant bitstream; check the data source or preprocessing (e.g., compression)."
  },
  "runs": {
    "title": "Runs Test",
    "short": "Checks the distribution of consecutive identical values (runs) among bits.",
    "long": "The test evaluates the number and lengths of consecutive sets of 0s or 1s; more or fewer runs than expected compromises randomness.",
    "remediation": "If there are frequently repeating subsequences or pattern generation, examine the data's source or the generation process."
  },
  "block_frequency": {
    "title": "Block Frequency Test",
    "short": "Measures bit frequency in large blocks.",
    "long": "It divides the data into fixed-length blocks and evaluates the 0/1 ratio in each block; intra-block inconsistencies are an indicator of a lack of randomness.",
    "remediation": "Adjust the block size or apply a transformation, especially in structured data formats (header/payload)."
  },
  "cusum": {
    "title": "Cumulative Sum (CUSUM) Test",
    "short": "Examines the cumulative sum deviations of the bit string.",
    "long": "CUSUM measures the cumulative effect of positive and negative deviations; large deviating trends indicate non-randomness.",
    "remediation": "Investigate sources creating trends and continuous bias; test whether it can be corrected with preprocessing."
  },
  "serial": {
    "title": "Serial (Overlapping) Test",
    "short": "Compares the frequencies of N-grams (bit sequences).",
    "long": "The serial test evaluates the expected frequencies of n-bit subsequences; it reveals anomalies between overlapping n-grams.",
    "remediation": "Check for repeating motifs, compressed or encoded sequences; test with a transformation chain."
  },
  "approximate_entropy": {
    "title": "Approximate Entropy",
    "short": "Measures the irregularity of the data based on entropy.",
    "long": "Approximate entropy is sensitive to repeating patterns in the data; low values may indicate a deterministic structure.",
    "remediation": "Investigate the source of repeating structures or re-evaluate with different window sizes."
  },
  "maurers_universal": {
    "title": "Maurer's Universal Statistical Test",
    "short": "Evaluates randomness based on compressibility.",
    "long": "This test evaluates the data against its ideal compression ratio; easily compressible data is not random.",
    "remediation": "Check the compressibility of the data; if there are uniform repetitions, review the data source."
  },
  "non_overlapping_template": {
    "title": "Non-overlapping Template Matching",
    "short": "Counts the occurrences of specific templates (no overlap).",
    "long": "It counts the repetitions of predefined fixed-length templates; excessive repetition is suspicious.",
    "remediation": "Review the template set and threshold values; try applying a pre-transform."
  },
  "overlapping_template": {
    "title": "Overlapping Template Matching",
    "short": "Counts the repetition of specific templates, even with overlap.",
    "long": "Detects local redundancies by counting overlapping template patterns.",
    "remediation": "Examine frequently repeating motifs in the data; apply windowing if necessary."
  },
  "random_excursions": {
    "title": "Random Excursions",
    "short": "Examines the distribution of excursion visits.",
    "long": "This test, based on a random walk, evaluates the visit frequencies of states; unexpected distributions can be an indicator of irregularity.",
    "remediation": "Check for long-range dependencies; test with more sampling."
  },
  "random_excursions_variant": {
    "title": "Random Excursions Variant",
    "short": "Provides diversified excursion counting metrics.",
    "long": "The variant makes more precise detections by measuring the visit statistics of different states.",
    "remediation": "Analyze segments of the data when abnormal values are observed."
  },
  "nist_dft_spectral": {
    "title": "NIST DFT Spectral Test",
    "short": "Looks for anomalies in the frequency domain of the sequence.",
    "long": "Detects peak frequencies using the Discrete Fourier Transform (DFT); a prominent spectral peak indicates non-random patterns.",
    "remediation": "Check sources that produce periodicity (repeating blocks, sensor sampling)."
  },
  "fft_spectral": {
    "title": "FFT Spectral (Large-Scale)",
    "short": "Spectral test for large data with downsample protection.",
    "long": "The FFT-based test performs automatic sampling above the NAIVE_DFT_BIT_LIMIT threshold; it prevents high memory usage.",
    "remediation": "Verify thresholds and downsample settings; try data segmentation."
  },
  "linear_complexity": {
    "title": "Linear Complexity Test",
    "short": "Measures the LFSR-based complexity of the data.",
    "long": "Linear complexity evaluates the length of the shortest LFSR that can produce the sequence; low complexity indicates a deterministic structure.",
    "remediation": "Examine repeating structures or short-period sources."
  },
  "lz_complexity": {
    "title": "LZ-Complexity",
    "short": "Lempel-Ziv compression-based complexity metric.",
    "long": "Measures the decomposability of the data based on LZ77/LZ78; low values indicate high repetitiveness.",
    "remediation": "Check for frequently repeating subsequences and protocol headers."
  },
  "dotplot": {
    "title": "Dotplot (Self-Similarity)",
    "short": "Visualizes repeating sections of the data within itself.",
    "long": "The similarity matrix between windowed data produces a heatmap showing copied or repeating blocks.",
    "remediation": "Extract repeating segments or apply segment-based analysis; report artifacts."
  },
  "binary_matrix_rank": {
    "title": "Binary Matrix Rank Test",
    "short": "Tests the rank distribution of bit matrices.",
    "long": "If the ranks of binary matrices created from the data deviate from the expected distribution, randomness is questioned.",
    "remediation": "Check matrix sizing and data segmentation."
  }
}